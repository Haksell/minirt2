#!/usr/bin/env python3

from dataclasses import dataclass
from itertools import groupby
import subprocess
import sys

BOLDRED = "\033[1m\033[31m"
BOLDGREEN = "\033[1m\033[32m"
RESET = "\033[0m"


def display(text, color):
    text = f"#  {text.upper()}  #"
    border = "#" * len(text)
    spaces = "#" + " " * (len(text) - 2) + "#"
    print(color + border, spaces, text, spaces, border + RESET, sep="\n")


@dataclass
class Execution:
    returncode: int
    stdout: str
    stderr: str


perfect = True
invalid_headers = 0
lines = (
    subprocess.run(["norminette", *sys.argv[1:]], capture_output=True)
    .stdout.decode()
    .strip()
    .split("\n")
)
groups = [list(v) for _, v in groupby(lines, key=lambda s: s.startswith("Error: "))]
for file, errors in zip(groups[0::2], groups[1::2]):
    if len(errors) == 1 and "INVALID_HEADER" in errors[0]:
        invalid_headers += 1
    elif len(errors) != 0:
        perfect = False
        print(file[0], *errors, sep="\n")
if not perfect:
    sys.exit(1)
if invalid_headers != 0:
    display(f"{invalid_headers} INVALID HEADERS", BOLDRED)
    sys.exit(1)
display("norminette accepted", BOLDGREEN)
